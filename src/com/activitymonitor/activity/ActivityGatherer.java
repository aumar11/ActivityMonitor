package com.activitymonitor.activity;

import android.app.Activity;
import android.content.ComponentName;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.SharedPreferences;
import android.media.AudioManager;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Spinner;
import android.widget.TextView;

import com.activitymonitor.R;
import com.activitymonitor.database.SampleDB;
import com.activitymonitor.listeners.SpinnerActivityTypeListener;
import com.activitymonitor.preferences.Preferences;
import com.activitymonitor.receivers.HeadSetReceiver;

public class ActivityGatherer extends Activity {
	/**
	 * Tag for use in logging and debugging the output generated by this class.
	 */
	public final static String TAG = "ActivityGatherer";
	private Spinner activityTypeSpinner;
	private HeadSetReceiver headSet;
	private IntentFilter headSetFilter;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_activity_gatherer);
		setPreferences();
		setUpHeadSetListener();
		setUpActivityTypeSpinner();

	}
	
	@Override
	protected void onDestroy(){
		super.onDestroy();
		removeHeadSetListener();
	}
	
	@Override
	protected void onResume(){
		super.onResume();
		setUpHeadSetListener();
	}
	

	private void setPreferences() {
	    SharedPreferences settings = getSharedPreferences(Preferences.PREFS_NAME, MODE_PRIVATE);
	      SharedPreferences.Editor editor = settings.edit();
	      editor.putInt(Preferences.CURRENT_STATE, Preferences.STATE_OFF);
	      editor.commit();
	      Log.i(TAG, "Set the preferences");
	}

	/**
	 *Registers a HeadSetReceiver.
	 */
	private void setUpHeadSetListener(){
		((AudioManager)getSystemService(AUDIO_SERVICE)).registerMediaButtonEventReceiver(new ComponentName(
				this,
				HeadSetReceiver.class));
		headSetFilter = new IntentFilter(Intent.ACTION_MEDIA_BUTTON);
		headSet = new HeadSetReceiver();
		headSetFilter.setPriority(1000);
		registerReceiver(headSet, headSetFilter);
	}
	
	/**
	 * 
	 */
	private void removeHeadSetListener(){
		if(headSet != null)
			unregisterReceiver(headSet);
	}
	private void setUpActivityTypeSpinner(){
		activityTypeSpinner = (Spinner) findViewById(R.id.spnrAcType);
		activityTypeSpinner.setOnItemSelectedListener(new SpinnerActivityTypeListener());
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_gatherer, menu);
		return true;
	}

    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
        case R.id.settings:
       // startActivity(new Intent(this, About.class));
        return true;
        case R.id.about:
      //  startActivity(new Intent(this, Help.class));
        return true;
        default:
        return super.onOptionsItemSelected(item);
        }
    }



}
