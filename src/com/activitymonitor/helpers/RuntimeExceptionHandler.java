//
// RuntimeExceptionHandler.java
// SocialGatherer
//
// Created by Jakub Konka on 30/04/2012
// Copyright (c) 2012 University of Strathclyde. All rights reserved.
//

package com.activitymonitor.helpers;

import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import java.lang.Thread.UncaughtExceptionHandler;

import android.util.Log;

/**
 * This class is responsible for handling any runtime exceptions
 * that are thrown but not caught, and logging them to a log file.
 * @author Jakub Konka
 * @version 1.0
 * @see java.lang.Thread.UncaughtExceptionHandler
 */
public class RuntimeExceptionHandler implements UncaughtExceptionHandler {
  /**
   * Tag for use in logging and debugging the output generated by this class.
   */
  public final static String TAG = "RuntimeExceptionHandler";

  private UncaughtExceptionHandler defaultEH;

  /**
   * Constructs an object of type {@code RuntimeExceptionHandler}.
   */
  public RuntimeExceptionHandler() {
    defaultEH = Thread.getDefaultUncaughtExceptionHandler();
  }

  /**
   * Called when the thread is being terminated by an uncaught exception.
   * Further exceptions thrown in this method prevent the remainder of the
   * method from executing, but are otherwise ignored. This method also logs
   * the stack trace to the log file for further investigation.
   * @param t Thread that has an uncaught exception.
   * @param e Exception that was thrown.
   */
  public void uncaughtException(Thread t, Throwable e) {
    final Writer result = new StringWriter();
    final PrintWriter printWriter = new PrintWriter(result);
    e.printStackTrace(printWriter);
    String stackTrace = result.toString();
    printWriter.close();
    Log.e(TAG, stackTrace);
    defaultEH.uncaughtException(t, e);
  }
}